/* empty css                                                */
/* home/runner/work/gradio/gradio/js/textbox/Example.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent,
	add_iframe_resize_listener,
	add_render_callback,
	append,
	attr,
	binding_callbacks,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	text,
	toggle_class
} = window.__gradio__svelte__internal;
const { onMount } = window.__gradio__svelte__internal;
function create_fragment(ctx) {
	let div;
	let t;
	let div_resize_listener;

	return {
		c() {
			div = element("div");
			t = text(/*value*/ ctx[0]);
			attr(div, "class", "svelte-1viwdyg");
			add_render_callback(() => /*div_elementresize_handler*/ ctx[5].call(div));
			toggle_class(div, "table", /*type*/ ctx[1] === "table");
			toggle_class(div, "gallery", /*type*/ ctx[1] === "gallery");
			toggle_class(div, "selected", /*selected*/ ctx[2]);
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, t);
			div_resize_listener = add_iframe_resize_listener(div, /*div_elementresize_handler*/ ctx[5].bind(div));
			/*div_binding*/ ctx[6](div);
		},
		p(ctx, [dirty]) {
			if (dirty & /*value*/ 1) set_data(t, /*value*/ ctx[0]);

			if (dirty & /*type*/ 2) {
				toggle_class(div, "table", /*type*/ ctx[1] === "table");
			}

			if (dirty & /*type*/ 2) {
				toggle_class(div, "gallery", /*type*/ ctx[1] === "gallery");
			}

			if (dirty & /*selected*/ 4) {
				toggle_class(div, "selected", /*selected*/ ctx[2]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(div);
			}

			div_resize_listener();
			/*div_binding*/ ctx[6](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { value } = $$props;
	let { type } = $$props;
	let { selected = false } = $$props;
	let size;
	let el;

	function set_styles(element, el_width) {
		if (!element || !el_width) return;
		el.style.setProperty("--local-text-width", `${el_width < 150 ? el_width : 200}px`);
		$$invalidate(4, el.style.whiteSpace = "unset", el);
	}

	onMount(() => {
		set_styles(el, size);
	});

	function div_elementresize_handler() {
		size = this.clientWidth;
		$$invalidate(3, size);
	}

	function div_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			el = $$value;
			$$invalidate(4, el);
		});
	}

	$$self.$$set = $$props => {
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('type' in $$props) $$invalidate(1, type = $$props.type);
		if ('selected' in $$props) $$invalidate(2, selected = $$props.selected);
	};

	return [value, type, selected, size, el, div_elementresize_handler, div_binding];
}

class Example extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { value: 0, type: 1, selected: 2 });
	}
}

export { Example as default };
//# sourceMappingURL=Example-abcadb77.js.map
