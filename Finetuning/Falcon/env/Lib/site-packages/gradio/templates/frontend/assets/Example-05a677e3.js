import { M as MarkdownCode } from './Example.svelte_svelte_type_style_lang-b83dcc5a.js';
import './Index-2cec2c56.js';
import './index-5550136d.js';
import './svelte/svelte.js';

/* home/runner/work/gradio/gradio/js/markdown/Example.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	toggle_class,
	transition_in,
	transition_out
} = window.__gradio__svelte__internal;
function create_fragment(ctx) {
	let div;
	let markdowncode;
	let current;

	markdowncode = new MarkdownCode({
			props: {
				message: /*value*/ ctx[0],
				latex_delimiters: /*latex_delimiters*/ ctx[5],
				sanitize_html: /*sanitize_html*/ ctx[3],
				line_breaks: /*line_breaks*/ ctx[4],
				chatbot: false
			}
		});

	return {
		c() {
			div = element("div");
			create_component(markdowncode.$$.fragment);
			attr(div, "class", "prose svelte-1ayixqk");
			toggle_class(div, "table", /*type*/ ctx[1] === "table");
			toggle_class(div, "gallery", /*type*/ ctx[1] === "gallery");
			toggle_class(div, "selected", /*selected*/ ctx[2]);
		},
		m(target, anchor) {
			insert(target, div, anchor);
			mount_component(markdowncode, div, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const markdowncode_changes = {};
			if (dirty & /*value*/ 1) markdowncode_changes.message = /*value*/ ctx[0];
			if (dirty & /*latex_delimiters*/ 32) markdowncode_changes.latex_delimiters = /*latex_delimiters*/ ctx[5];
			if (dirty & /*sanitize_html*/ 8) markdowncode_changes.sanitize_html = /*sanitize_html*/ ctx[3];
			if (dirty & /*line_breaks*/ 16) markdowncode_changes.line_breaks = /*line_breaks*/ ctx[4];
			markdowncode.$set(markdowncode_changes);

			if (!current || dirty & /*type*/ 2) {
				toggle_class(div, "table", /*type*/ ctx[1] === "table");
			}

			if (!current || dirty & /*type*/ 2) {
				toggle_class(div, "gallery", /*type*/ ctx[1] === "gallery");
			}

			if (!current || dirty & /*selected*/ 4) {
				toggle_class(div, "selected", /*selected*/ ctx[2]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(markdowncode.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(markdowncode.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) {
				detach(div);
			}

			destroy_component(markdowncode);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { value } = $$props;
	let { type } = $$props;
	let { selected = false } = $$props;
	let { sanitize_html } = $$props;
	let { line_breaks } = $$props;
	let { latex_delimiters } = $$props;

	$$self.$$set = $$props => {
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('type' in $$props) $$invalidate(1, type = $$props.type);
		if ('selected' in $$props) $$invalidate(2, selected = $$props.selected);
		if ('sanitize_html' in $$props) $$invalidate(3, sanitize_html = $$props.sanitize_html);
		if ('line_breaks' in $$props) $$invalidate(4, line_breaks = $$props.line_breaks);
		if ('latex_delimiters' in $$props) $$invalidate(5, latex_delimiters = $$props.latex_delimiters);
	};

	return [value, type, selected, sanitize_html, line_breaks, latex_delimiters];
}

class Example extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			value: 0,
			type: 1,
			selected: 2,
			sanitize_html: 3,
			line_breaks: 4,
			latex_delimiters: 5
		});
	}
}

export { Example as default };
//# sourceMappingURL=Example-05a677e3.js.map
