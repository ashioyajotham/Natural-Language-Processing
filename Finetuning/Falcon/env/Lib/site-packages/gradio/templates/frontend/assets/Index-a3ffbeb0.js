const Index_svelte_svelte_type_style_lang = '';

/* home/runner/work/gradio/gradio/js/group/Index.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent,
	append,
	attr,
	create_slot,
	detach,
	element,
	get_all_dirty_from_scope,
	get_slot_changes,
	init,
	insert,
	safe_not_equal,
	set_style,
	toggle_class,
	transition_in,
	transition_out,
	update_slot_base
} = window.__gradio__svelte__internal;
function create_fragment(ctx) {
	let div1;
	let div0;
	let div1_class_value;
	let current;
	const default_slot_template = /*#slots*/ ctx[4].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);

	return {
		c() {
			div1 = element("div");
			div0 = element("div");
			if (default_slot) default_slot.c();
			attr(div0, "class", "styler svelte-iyf88w");
			set_style(div0, "--block-radius", `0px`);
			set_style(div0, "--block-border-width", `0px`);
			set_style(div0, "--layout-gap", `1px`);
			set_style(div0, "--form-gap-width", `1px`);
			set_style(div0, "--button-border-width", `0px`);
			set_style(div0, "--button-large-radius", `0px`);
			set_style(div0, "--button-small-radius", `0px`);
			attr(div1, "id", /*elem_id*/ ctx[0]);
			attr(div1, "class", div1_class_value = "gr-group " + /*elem_classes*/ ctx[1].join(' ') + " svelte-iyf88w");
			toggle_class(div1, "hide", !/*visible*/ ctx[2]);
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 8)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[3],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[3])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[3], dirty, null),
						null
					);
				}
			}

			if (!current || dirty & /*elem_id*/ 1) {
				attr(div1, "id", /*elem_id*/ ctx[0]);
			}

			if (!current || dirty & /*elem_classes*/ 2 && div1_class_value !== (div1_class_value = "gr-group " + /*elem_classes*/ ctx[1].join(' ') + " svelte-iyf88w")) {
				attr(div1, "class", div1_class_value);
			}

			if (!current || dirty & /*elem_classes, visible*/ 6) {
				toggle_class(div1, "hide", !/*visible*/ ctx[2]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) {
				detach(div1);
			}

			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { elem_id = "" } = $$props;
	let { elem_classes = [] } = $$props;
	let { visible = true } = $$props;

	$$self.$$set = $$props => {
		if ('elem_id' in $$props) $$invalidate(0, elem_id = $$props.elem_id);
		if ('elem_classes' in $$props) $$invalidate(1, elem_classes = $$props.elem_classes);
		if ('visible' in $$props) $$invalidate(2, visible = $$props.visible);
		if ('$$scope' in $$props) $$invalidate(3, $$scope = $$props.$$scope);
	};

	return [elem_id, elem_classes, visible, $$scope, slots];
}

class Index extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { elem_id: 0, elem_classes: 1, visible: 2 });
	}
}

export { Index as default };
//# sourceMappingURL=Index-a3ffbeb0.js.map
