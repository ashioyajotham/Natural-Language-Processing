{"version":3,"file":"Index-42ed4a43.js","sources":["../../../../js/dataframe/shared/EditableCell.svelte","../../../../js/dataframe/shared/VirtualTable.svelte","../../../../js/dataframe/shared/Table.svelte","../../../../js/dataframe/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { MarkdownCode } from \"@gradio/markdown\";\n\n\texport let edit: boolean;\n\texport let value: string | number = \"\";\n\texport let display_value: string | null = null;\n\texport let styling = \"\";\n\texport let header = false;\n\texport let datatype:\n\t\t| \"str\"\n\t\t| \"markdown\"\n\t\t| \"html\"\n\t\t| \"number\"\n\t\t| \"bool\"\n\t\t| \"date\" = \"str\";\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let clear_on_focus = false;\n\texport let select_on_focus = false;\n\texport let line_breaks = true;\n\texport let editable = true;\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let el: HTMLInputElement | null;\n\t$: _value = value;\n\n\tfunction use_focus(node: HTMLInputElement): any {\n\t\tif (clear_on_focus) {\n\t\t\t_value = \"\";\n\t\t}\n\t\tif (select_on_focus) {\n\t\t\tnode.select();\n\t\t}\n\n\t\tnode.focus();\n\n\t\treturn {};\n\t}\n\n\tfunction handle_blur({\n\t\tcurrentTarget\n\t}: Event & {\n\t\tcurrentTarget: HTMLInputElement;\n\t}): void {\n\t\tvalue = currentTarget.value;\n\t\tdispatch(\"blur\");\n\t}\n</script>\n\n{#if edit}\n\t<input\n\t\tbind:this={el}\n\t\tbind:value={_value}\n\t\tclass:header\n\t\ttabindex=\"-1\"\n\t\ton:blur={handle_blur}\n\t\tuse:use_focus\n\t\ton:keydown\n\t/>\n{/if}\n\n<span\n\ton:dblclick\n\ttabindex=\"-1\"\n\trole=\"button\"\n\tclass:edit\n\ton:focus|preventDefault\n\tstyle={styling}\n>\n\t{#if datatype === \"html\"}\n\t\t{@html value}\n\t{:else if datatype === \"markdown\"}\n\t\t<MarkdownCode\n\t\t\tmessage={value.toLocaleString()}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\tchatbot={false}\n\t\t/>\n\t{:else}\n\t\t{editable ? value : display_value || value}\n\t{/if}\n</span>\n\n<style>\n\tinput {\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tbottom: var(--size-2);\n\t\tleft: var(--size-2);\n\t\tflex: 1 1 0%;\n\t\ttransform: translateX(-0.1px);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t}\n\n\tspan {\n\t\tflex: 1 1 0%;\n\t\toutline: none;\n\t\tpadding: var(--size-2);\n\t}\n\n\t.header {\n\t\ttransform: translateX(0);\n\t\tfont: var(--weight-bold);\n\t}\n\n\t.edit {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount, tick } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let items: any[][] = [];\n\n\texport let table_width: number;\n\texport let max_height: number;\n\texport let actual_height: number;\n\texport let table_scrollbar_width: number;\n\texport let start = 0;\n\texport let end = 0;\n\texport let selected: number | false;\n\tlet height = \"100%\";\n\n\tlet average_height: number;\n\tlet bottom = 0;\n\tlet contents: HTMLTableSectionElement;\n\tlet head_height = 0;\n\tlet foot_height = 0;\n\tlet height_map: number[] = [];\n\tlet mounted: boolean;\n\tlet rows: HTMLCollectionOf<HTMLTableRowElement>;\n\tlet top = 0;\n\tlet viewport: HTMLTableElement;\n\tlet viewport_height = 0;\n\tlet visible: { index: number; data: any[] }[] = [];\n\n\t$: if (mounted) requestAnimationFrame(() => refresh_height_map(sortedItems));\n\n\tlet content_height = 0;\n\tasync function refresh_height_map(_items: typeof items): Promise<void> {\n\t\tif (viewport_height === 0 || table_width === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst { scrollTop } = viewport;\n\t\ttable_scrollbar_width = viewport.offsetWidth - viewport.clientWidth;\n\n\t\tcontent_height = top - (scrollTop - head_height);\n\t\tlet i = start;\n\n\t\twhile (content_height < max_height && i < _items.length) {\n\t\t\tlet row = rows[i - start];\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\t\t\tlet _h = row?.getBoundingClientRect().height;\n\t\t\tif (!_h) {\n\t\t\t\t_h = average_height;\n\t\t\t}\n\t\t\tconst row_height = (height_map[i] = _h);\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\t\tconst remaining = _items.length - end;\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tcontent_height += scrollbar_height;\n\t\t}\n\n\t\tlet filtered_height_map = height_map.filter((v) => typeof v === \"number\");\n\t\taverage_height =\n\t\t\tfiltered_height_map.reduce((a, b) => a + b, 0) /\n\t\t\tfiltered_height_map.length;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = _items.length;\n\t\tawait tick();\n\t\tif (!max_height) {\n\t\t\tactual_height = content_height + 1;\n\t\t} else if (content_height < max_height) {\n\t\t\tactual_height = content_height + 2;\n\t\t} else {\n\t\t\tactual_height = max_height;\n\t\t}\n\n\t\tawait tick();\n\t}\n\n\t$: scroll_and_render(selected);\n\tasync function scroll_and_render(n: number | false): Promise<void> {\n\t\trequestAnimationFrame(async () => {\n\t\t\tif (typeof n !== \"number\") return;\n\t\t\tconst direction = typeof n !== \"number\" ? false : is_in_view(n);\n\t\t\tif (direction === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (direction === \"back\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" });\n\t\t\t}\n\n\t\t\tif (direction === \"forwards\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" }, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction is_in_view(n: number): \"back\" | \"forwards\" | true {\n\t\tconst current = rows && rows[n - start];\n\t\tif (!current && n < start) {\n\t\t\treturn \"back\";\n\t\t}\n\t\tif (!current && n >= end - 1) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\tconst { top: viewport_top } = viewport.getBoundingClientRect();\n\t\tconst { top, bottom } = current.getBoundingClientRect();\n\n\t\tif (top - viewport_top < 37) {\n\t\t\treturn \"back\";\n\t\t}\n\n\t\tif (bottom - viewport_top > viewport_height) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction get_computed_px_amount(elem: HTMLElement, property: string): number {\n\t\tif (!elem) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst compStyle = getComputedStyle(elem);\n\n\t\tlet x = parseInt(compStyle.getPropertyValue(property));\n\t\treturn x;\n\t}\n\n\tasync function handle_scroll(e: Event): Promise<void> {\n\t\tconst scroll_top = viewport.scrollTop;\n\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tconst is_start_overflow = sortedItems.length < start;\n\n\t\tconst row_top_border = get_computed_px_amount(rows[1], \"border-top-width\");\n\n\t\tconst actual_border_collapsed_width = 0;\n\n\t\tif (is_start_overflow) {\n\t\t\tawait scroll_to_index(sortedItems.length - 1, { behavior: \"auto\" });\n\t\t}\n\n\t\tlet new_start = 0;\n\t\t// acquire height map for currently visible rows\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = rows[v].getBoundingClientRect().height;\n\t\t}\n\t\tlet i = 0;\n\t\t// start from top: thead, with its borders, plus the first border to afterwards neglect\n\t\tlet y = head_height + row_top_border / 2;\n\t\tlet row_heights = [];\n\t\t// loop items to find new start\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\trow_heights[i] = row_height;\n\t\t\t// we only want to jump if the full (incl. border) row is away\n\t\t\tif (y + row_height + actual_border_collapsed_width > scroll_top) {\n\t\t\t\t// this is the last index still inside the viewport\n\t\t\t\tnew_start = i;\n\t\t\t\ttop = y - (head_height + row_top_border / 2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tnew_start = Math.max(0, new_start);\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t\tif (y > scroll_top + viewport_height) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstart = new_start;\n\t\tend = i;\n\t\tconst remaining = sortedItems.length - end;\n\t\tif (end === 0) {\n\t\t\tend = 10;\n\t\t}\n\t\taverage_height = (y - head_height) / end;\n\t\tlet remaining_height = remaining * average_height; // 0\n\t\t// compute height map for remaining items\n\t\twhile (i < sortedItems.length) {\n\t\t\ti += 1;\n\t\t\theight_map[i] = average_height;\n\t\t}\n\t\tbottom = remaining_height;\n\t\tif (!isFinite(bottom)) {\n\t\t\tbottom = 200000;\n\t\t}\n\t}\n\n\texport async function scroll_to_index(\n\t\tindex: number,\n\t\topts: ScrollToOptions,\n\t\talign_end = false\n\t): Promise<void> {\n\t\tawait tick();\n\n\t\tconst _itemHeight = average_height;\n\n\t\tlet distance = index * _itemHeight;\n\t\tif (align_end) {\n\t\t\tdistance = distance - viewport_height + _itemHeight + head_height;\n\t\t}\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tdistance += scrollbar_height;\n\t\t}\n\n\t\tconst _opts = {\n\t\t\ttop: distance,\n\t\t\tbehavior: \"smooth\" as ScrollBehavior,\n\t\t\t...opts\n\t\t};\n\n\t\tviewport.scrollTo(_opts);\n\t}\n\n\t$: sortedItems = items;\n\n\t$: visible = sortedItems.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\tonMount(() => {\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tmounted = true;\n\t\trefresh_height_map(items);\n\t});\n</script>\n\n<svelte-virtual-table-viewport>\n\t<table\n\t\tclass=\"table\"\n\t\tbind:this={viewport}\n\t\tbind:offsetHeight={viewport_height}\n\t\ton:scroll={handle_scroll}\n\t\tstyle=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {head_height}px; --bw-svt-foot-height: {foot_height}px; --bw-svt-avg-row-height: {average_height}px\"\n\t>\n\t\t<thead class=\"thead\" bind:offsetHeight={head_height}>\n\t\t\t<slot name=\"thead\" />\n\t\t</thead>\n\t\t<tbody bind:this={contents} class=\"tbody\">\n\t\t\t{#if visible.length && visible[0].data.length}\n\t\t\t\t{#each visible as item (item.data[0].id)}\n\t\t\t\t\t<slot name=\"tbody\" item={item.data} index={item.index}>\n\t\t\t\t\t\tMissing Table Row\n\t\t\t\t\t</slot>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</tbody>\n\t\t<tfoot class=\"tfoot\" bind:offsetHeight={foot_height}>\n\t\t\t<slot name=\"tfoot\" />\n\t\t</tfoot>\n\t</table>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n\ttable {\n\t\tposition: relative;\n\t\toverflow-y: scroll;\n\t\toverflow-x: scroll;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmax-height: 100vh;\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t}\n\ttable :is(thead, tfoot, tbody) {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\ttbody {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t}\n\n\ttable tbody {\n\t\tpadding-top: var(--bw-svt-p-top);\n\t\tpadding-bottom: var(--bw-svt-p-bottom);\n\t}\n\ttbody {\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tborder: 0px solid currentColor;\n\t}\n\n\ttbody > :global(tr:last-child) {\n\t\tborder: none;\n\t}\n\n\ttable :global(td) {\n\t\tscroll-snap-align: start;\n\t}\n\n\ttbody > :global(tr:nth-child(even)) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\tbox-shadow: var(--shadow-drop);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { dsvFormat } from \"d3-dsv\";\n\timport { dequal } from \"dequal/lite\";\n\timport { copy } from \"@gradio/utils\";\n\timport { Upload } from \"@gradio/upload\";\n\timport { BaseButton } from \"@gradio/button\";\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport type { I18nFormatter } from \"js/app/src/gradio_helper\";\n\timport VirtualTable from \"./VirtualTable.svelte\";\n\timport type {\n\t\tHeaders,\n\t\tHeadersWithIDs,\n\t\tData,\n\t\tMetadata,\n\t\tDatatype\n\t} from \"./utils\";\n\n\texport let datatype: Datatype | Datatype[];\n\texport let label: string | null = null;\n\texport let headers: Headers = [];\n\tlet values: (string | number)[][];\n\texport let value: { data: Data; headers: Headers; metadata: Metadata } | null;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\n\texport let editable = true;\n\texport let wrap = false;\n\texport let root: string;\n\texport let i18n: I18nFormatter;\n\n\texport let height = 500;\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\n\tlet selected: false | [number, number] = false;\n\tlet display_value: string[][] | null = value?.metadata?.display_value ?? null;\n\tlet styling: string[][] | null = value?.metadata?.styling ?? null;\n\n\t$: {\n\t\tif (value) {\n\t\t\theaders = value.headers;\n\t\t\tvalues = value.data;\n\t\t\tdisplay_value = value?.metadata?.display_value ?? null;\n\t\t\tstyling = value?.metadata?.styling ?? null;\n\t\t} else if (values === null) {\n\t\t\tvalues = [];\n\t\t}\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: {\n\t\t\tdata: (string | number)[][];\n\t\t\theaders: string[];\n\t\t\tmetadata: Metadata;\n\t\t};\n\t\tselect: SelectData;\n\t}>();\n\n\tlet editing: false | [number, number] = false;\n\n\tconst get_data_at = (row: number, col: number): string | number =>\n\t\tdata?.[row]?.[col]?.value;\n\t$: {\n\t\tif (selected !== false) {\n\t\t\tconst [row, col] = selected;\n\t\t\tif (!isNaN(row) && !isNaN(col)) {\n\t\t\t\tdispatch(\"select\", { index: [row, col], value: get_data_at(row, col) });\n\t\t\t}\n\t\t}\n\t}\n\tlet els: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t> = {};\n\n\tlet data_binding: Record<string, (typeof data)[0][0]> = {};\n\n\tfunction make_id(): string {\n\t\treturn Math.random().toString(36).substring(2, 15);\n\t}\n\tfunction make_headers(_head: Headers): HeadersWithIDs {\n\t\tlet _h = _head || [];\n\t\tif (col_count[1] === \"fixed\" && _h.length < col_count[0]) {\n\t\t\tconst fill = Array(col_count[0] - _h.length)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + _h.length}`);\n\t\t\t_h = _h.concat(fill);\n\t\t}\n\n\t\tif (!_h || _h.length === 0) {\n\t\t\treturn Array(col_count[0])\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\tconst _id = make_id();\n\t\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\t\treturn { id: _id, value: JSON.stringify(i + 1) };\n\t\t\t\t});\n\t\t}\n\t\treturn _h.map((h, i) => {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\treturn { id: _id, value: h ?? \"\" };\n\t\t});\n\t}\n\n\tfunction process_data(_values: (string | number)[][]): {\n\t\tvalue: string | number;\n\t\tid: string;\n\t}[][] {\n\t\tconst data_row_length = _values.length;\n\t\treturn Array(\n\t\t\trow_count[1] === \"fixed\"\n\t\t\t\t? row_count[0]\n\t\t\t\t: data_row_length < row_count[0]\n\t\t\t\t? row_count[0]\n\t\t\t\t: data_row_length\n\t\t)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) =>\n\t\t\t\tArray(\n\t\t\t\t\tcol_count[1] === \"fixed\"\n\t\t\t\t\t\t? col_count[0]\n\t\t\t\t\t\t: data_row_length > 0\n\t\t\t\t\t\t? _values[0].length\n\t\t\t\t\t\t: headers.length\n\t\t\t\t)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, j) => {\n\t\t\t\t\t\tconst id = make_id();\n\t\t\t\t\t\tels[id] = els[id] || { input: null, cell: null };\n\t\t\t\t\t\tconst obj = { value: _values?.[i]?.[j] ?? \"\", id };\n\t\t\t\t\t\tdata_binding[id] = obj;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t})\n\t\t\t);\n\t}\n\n\tlet _headers = make_headers(headers);\n\tlet old_headers: string[] | undefined;\n\n\t$: {\n\t\tif (!dequal(headers, old_headers)) {\n\t\t\ttrigger_headers();\n\t\t}\n\t}\n\n\tfunction trigger_headers(): void {\n\t\t_headers = make_headers(headers);\n\n\t\told_headers = headers.slice();\n\t}\n\t$: if (!dequal(values, old_val)) {\n\t\tdata = process_data(values as (string | number)[][]);\n\t\told_val = values as (string | number)[][];\n\t}\n\n\tlet data: { id: string; value: string | number }[][] = [[]];\n\n\tlet old_val: undefined | (string | number)[][] = undefined;\n\n\t$: _headers &&\n\t\tdispatch(\"change\", {\n\t\t\tdata: data.map((r) => r.map(({ value }) => value)),\n\t\t\theaders: _headers.map((h) => h.value),\n\t\t\tmetadata: editable\n\t\t\t\t? null\n\t\t\t\t: { display_value: display_value, styling: styling }\n\t\t});\n\n\tfunction get_sort_status(\n\t\tname: string,\n\t\t_sort?: number,\n\t\tdirection?: SortDirection\n\t): \"none\" | \"ascending\" | \"descending\" {\n\t\tif (!_sort) return \"none\";\n\t\tif (headers[_sort] === name) {\n\t\t\tif (direction === \"asc\") return \"ascending\";\n\t\t\tif (direction === \"des\") return \"descending\";\n\t\t}\n\n\t\treturn \"none\";\n\t}\n\n\tfunction get_current_indices(id: string): [number, number] {\n\t\treturn data.reduce(\n\t\t\t(acc, arr, i) => {\n\t\t\t\tconst j = arr.reduce(\n\t\t\t\t\t(_acc, _data, k) => (id === _data.id ? k : _acc),\n\t\t\t\t\t-1\n\t\t\t\t);\n\n\t\t\t\treturn j === -1 ? acc : [i, j];\n\t\t\t},\n\t\t\t[-1, -1]\n\t\t);\n\t}\n\n\tasync function start_edit(i: number, j: number): Promise<void> {\n\t\tif (!editable || dequal(editing, [i, j])) return;\n\n\t\tediting = [i, j];\n\t}\n\n\tfunction move_cursor(\n\t\tkey: \"ArrowRight\" | \"ArrowLeft\" | \"ArrowDown\" | \"ArrowUp\",\n\t\tcurrent_coords: [number, number]\n\t): void {\n\t\tconst dir = {\n\t\t\tArrowRight: [0, 1],\n\t\t\tArrowLeft: [0, -1],\n\t\t\tArrowDown: [1, 0],\n\t\t\tArrowUp: [-1, 0]\n\t\t}[key];\n\n\t\tconst i = current_coords[0] + dir[0];\n\t\tconst j = current_coords[1] + dir[1];\n\n\t\tif (i < 0 && j <= 0) {\n\t\t\tselected_header = j;\n\t\t\tselected = false;\n\t\t} else {\n\t\t\tconst is_data = data[i]?.[j];\n\t\t\tselected = is_data ? [i, j] : selected;\n\t\t}\n\t}\n\n\tlet clear_on_focus = false;\n\t// eslint-disable-next-line complexity\n\tasync function handle_keydown(event: KeyboardEvent): Promise<void> {\n\t\tif (selected_header !== false && header_edit === false) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tselected = [0, selected_header];\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header > 0 ? selected_header - 1 : selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header < _headers.length - 1\n\t\t\t\t\t\t\t? selected_header + 1\n\t\t\t\t\t\t\t: selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"Escape\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Enter\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!selected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [i, j] = selected;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowRight\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tif (editing) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tmove_cursor(event.key, [i, j]);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Escape\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tediting = false;\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tadd_row(i);\n\t\t\t\t\tawait tick();\n\n\t\t\t\t\tselected = [i + 1, j];\n\t\t\t\t} else {\n\t\t\t\t\tif (dequal(editing, [i, j])) {\n\t\t\t\t\t\tediting = false;\n\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\tselected = [i, j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tediting = [i, j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase \"Backspace\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Delete\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Tab\":\n\t\t\t\tlet direction = event.shiftKey ? -1 : 1;\n\n\t\t\t\tlet is_data_x = data[i][j + direction];\n\t\t\t\tlet is_data_y =\n\t\t\t\t\tdata?.[i + direction]?.[direction > 0 ? 0 : _headers.length - 1];\n\n\t\t\t\tif (is_data_x || is_data_y) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected = is_data_x\n\t\t\t\t\t\t? [i, j + direction]\n\t\t\t\t\t\t: [i + direction, direction > 0 ? 0 : _headers.length - 1];\n\t\t\t\t}\n\t\t\t\tediting = false;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (\n\t\t\t\t\t(!editing || (editing && dequal(editing, [i, j]))) &&\n\t\t\t\t\tevent.key.length === 1\n\t\t\t\t) {\n\t\t\t\t\tclear_on_focus = true;\n\t\t\t\t\tediting = [i, j];\n\t\t\t\t}\n\t\t}\n\t}\n\n\tasync function handle_cell_click(i: number, j: number): Promise<void> {\n\t\tif (dequal(editing, [i, j])) return;\n\t\theader_edit = false;\n\t\tselected_header = false;\n\t\tediting = false;\n\t\tselected = [i, j];\n\t\tawait tick();\n\t\tparent.focus();\n\t}\n\n\ttype SortDirection = \"asc\" | \"des\";\n\tlet sort_direction: SortDirection | undefined;\n\tlet sort_by: number | undefined;\n\n\tfunction handle_sort(col: number): void {\n\t\tif (typeof sort_by !== \"number\" || sort_by !== col) {\n\t\t\tsort_direction = \"asc\";\n\t\t\tsort_by = col;\n\t\t} else {\n\t\t\tif (sort_direction === \"asc\") {\n\t\t\t\tsort_direction = \"des\";\n\t\t\t} else if (sort_direction === \"des\") {\n\t\t\t\tsort_direction = \"asc\";\n\t\t\t}\n\t\t}\n\t}\n\n\tlet header_edit: number | false;\n\n\tlet select_on_focus = false;\n\tlet selected_header: number | false = false;\n\tasync function edit_header(i: number, _select = false): Promise<void> {\n\t\tif (!editable || col_count[1] !== \"dynamic\" || header_edit === i) return;\n\t\tselected = false;\n\t\tselected_header = i;\n\t\theader_edit = i;\n\t\tselect_on_focus = _select;\n\t}\n\n\tfunction end_header_edit(event: KeyboardEvent): void {\n\t\tif (!editable) return;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Enter\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tselected = false;\n\t\t\t\tselected_header = header_edit;\n\t\t\t\theader_edit = false;\n\t\t\t\tparent.focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync function add_row(index?: number): Promise<void> {\n\t\tparent.focus();\n\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length === 0) {\n\t\t\tvalues = [Array(headers.length).fill(\"\")];\n\t\t\treturn;\n\t\t}\n\n\t\tdata.splice(\n\t\t\tindex ? index + 1 : data.length,\n\t\t\t0,\n\t\t\tArray(data[0].length)\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\tconst _id = make_id();\n\n\t\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\t\treturn { id: _id, value: \"\" };\n\t\t\t\t})\n\t\t);\n\n\t\tdata = data;\n\t\tselected = [index ? index + 1 : data.length - 1, 0];\n\t}\n\n\tasync function add_col(): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\tdata[i].push({ id: _id, value: \"\" });\n\t\t}\n\n\t\theaders.push(`Header ${headers.length + 1}`);\n\n\t\tdata = data;\n\t\theaders = headers;\n\n\t\tawait tick();\n\n\t\trequestAnimationFrame(() => {\n\t\t\tedit_header(headers.length - 1, true);\n\t\t\tconst new_w = parent.querySelectorAll(\"tbody\")[1].offsetWidth;\n\t\t\tparent.querySelectorAll(\"table\")[1].scrollTo({ left: new_w });\n\t\t});\n\t}\n\n\tfunction handle_click_outside(event: Event): void {\n\t\tevent.stopImmediatePropagation();\n\t\tconst [trigger] = event.composedPath() as HTMLElement[];\n\t\tif (parent.contains(trigger)) {\n\t\t\treturn;\n\t\t}\n\n\t\tediting = false;\n\t\theader_edit = false;\n\t\tselected_header = false;\n\t\tselected = false;\n\t}\n\n\tfunction guess_delimitaor(\n\t\ttext: string,\n\t\tpossibleDelimiters: string[]\n\t): string[] {\n\t\treturn possibleDelimiters.filter(weedOut);\n\n\t\tfunction weedOut(delimiter: string): boolean {\n\t\t\tvar cache = -1;\n\t\t\treturn text.split(\"\\n\").every(checkLength);\n\n\t\t\tfunction checkLength(line: string): boolean {\n\t\t\t\tif (!line) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar length = line.split(delimiter).length;\n\t\t\t\tif (cache < 0) {\n\t\t\t\t\tcache = length;\n\t\t\t\t}\n\t\t\t\treturn cache === length && length > 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction data_uri_to_blob(data_uri: string): Blob {\n\t\tconst byte_str = atob(data_uri.split(\",\")[1]);\n\t\tconst mime_str = data_uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n\t\tconst ab = new ArrayBuffer(byte_str.length);\n\t\tconst ia = new Uint8Array(ab);\n\n\t\tfor (let i = 0; i < byte_str.length; i++) {\n\t\t\tia[i] = byte_str.charCodeAt(i);\n\t\t}\n\n\t\treturn new Blob([ab], { type: mime_str });\n\t}\n\n\tfunction blob_to_string(blob: Blob): void {\n\t\tconst reader = new FileReader();\n\n\t\tfunction handle_read(e: ProgressEvent<FileReader>): void {\n\t\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\n\t\t\tconst [delimiter] = guess_delimitaor(e.target.result, [\",\", \"\\t\"]);\n\n\t\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\n\t\t\t_headers = make_headers(\n\t\t\t\tcol_count[1] === \"fixed\" ? head.slice(0, col_count[0]) : head\n\t\t\t);\n\n\t\t\tvalues = rest;\n\t\t\treader.removeEventListener(\"loadend\", handle_read);\n\t\t}\n\n\t\treader.addEventListener(\"loadend\", handle_read);\n\n\t\treader.readAsText(blob);\n\t}\n\n\tlet dragging = false;\n\n\tlet t_width = 0;\n\n\tfunction get_max(\n\t\t_d: { value: any; id: string }[][]\n\t): { value: any; id: string }[] {\n\t\tlet max = _d[0].slice();\n\t\tfor (let i = 0; i < _d.length; i++) {\n\t\t\tfor (let j = 0; j < _d[i].length; j++) {\n\t\t\t\tif (`${max[j].value}`.length < `${_d[i][j].value}`.length) {\n\t\t\t\t\tmax[j] = _d[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\t$: max = get_max(data);\n\n\t$: cells[0] && set_cell_widths();\n\tlet cells: HTMLTableCellElement[] = [];\n\tlet parent: HTMLDivElement;\n\tlet table: HTMLTableElement;\n\n\tfunction set_cell_widths(): void {\n\t\tconst widths = cells.map((el, i) => {\n\t\t\treturn el?.clientWidth || 0;\n\t\t});\n\t\tif (widths.length === 0) return;\n\t\tfor (let i = 0; i < widths.length; i++) {\n\t\t\tparent.style.setProperty(\n\t\t\t\t`--cell-width-${i}`,\n\t\t\t\t`${widths[i] - scrollbar_width / widths.length}px`\n\t\t\t);\n\t\t}\n\t}\n\n\tlet table_height: number = height;\n\tlet scrollbar_width = 0;\n\n\tfunction sort_data(\n\t\t_data: typeof data,\n\t\t_display_value: string[][] | null,\n\t\t_styling: string[][] | null,\n\t\tcol?: number,\n\t\tdir?: SortDirection\n\t): void {\n\t\tlet id = null;\n\t\t//Checks if the selected cell is still in the data\n\t\tif (selected && selected[0] in data && selected[1] in data[selected[0]]) {\n\t\t\tid = data[selected[0]][selected[1]].id;\n\t\t}\n\t\tif (typeof col !== \"number\" || !dir) {\n\t\t\treturn;\n\t\t}\n\t\tconst indices = [...Array(_data.length).keys()];\n\n\t\tif (dir === \"asc\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value < _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else if (dir === \"des\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value > _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// sort all the data and metadata based on the values in the data\n\t\tconst temp_data = [..._data];\n\t\tconst temp_display_value = _display_value ? [..._display_value] : null;\n\t\tconst temp_styling = _styling ? [..._styling] : null;\n\t\tindices.forEach((originalIndex, sortedIndex) => {\n\t\t\t_data[sortedIndex] = temp_data[originalIndex];\n\t\t\tif (_display_value && temp_display_value)\n\t\t\t\t_display_value[sortedIndex] = temp_display_value[originalIndex];\n\t\t\tif (_styling && temp_styling)\n\t\t\t\t_styling[sortedIndex] = temp_styling[originalIndex];\n\t\t});\n\n\t\tdata = data;\n\n\t\tif (id) {\n\t\t\tconst [i, j] = get_current_indices(id);\n\t\t\tselected = [i, j];\n\t\t}\n\t}\n\n\t$: sort_data(data, display_value, styling, sort_by, sort_direction);\n\n\t$: selected_index = !!selected && selected[0];\n\n\tlet is_visible = false;\n\tonMount(() => {\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting && !is_visible) {\n\t\t\t\t\tset_cell_widths();\n\t\t\t\t\tdata = data;\n\t\t\t\t}\n\n\t\t\t\tis_visible = entry.isIntersecting;\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(parent);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n</script>\n\n<svelte:window\n\ton:click={handle_click_outside}\n\ton:touchstart={handle_click_outside}\n\ton:resize={() => set_cell_widths()}\n/>\n\n<div class:label={label && label.length !== 0} use:copy>\n\t{#if label && label.length !== 0}\n\t\t<p>\n\t\t\t{label}\n\t\t</p>\n\t{/if}\n\t<div\n\t\tbind:this={parent}\n\t\tclass=\"table-wrap\"\n\t\tclass:dragging\n\t\tclass:no-wrap={!wrap}\n\t\tstyle=\"height:{table_height}px\"\n\t\ton:keydown={(e) => handle_keydown(e)}\n\t\trole=\"grid\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<table\n\t\t\tbind:clientWidth={t_width}\n\t\t\tbind:this={table}\n\t\t\tclass:fixed-layout={column_widths.length != 0}\n\t\t>\n\t\t\t{#if label && label.length !== 0}\n\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t{/if}\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:editing={header_edit === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle:width={column_widths.length ? column_widths[i] : undefined}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction} \"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each max as { value, id }, j (id)}\n\t\t\t\t\t\t<td tabindex=\"-1\" bind:this={cells[j]}>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Upload\n\t\t\tflex={false}\n\t\t\tcenter={false}\n\t\t\tboundedheight={false}\n\t\t\tdisable_click={true}\n\t\t\t{root}\n\t\t\ton:load={(e) => blob_to_string(data_uri_to_blob(e.detail.data))}\n\t\t\tbind:dragging\n\t\t>\n\t\t\t<VirtualTable\n\t\t\t\tbind:items={data}\n\t\t\t\ttable_width={t_width}\n\t\t\t\tmax_height={height}\n\t\t\t\tbind:actual_height={table_height}\n\t\t\t\tbind:table_scrollbar_width={scrollbar_width}\n\t\t\t\tselected={selected_index}\n\t\t\t>\n\t\t\t\t{#if label && label.length !== 0}\n\t\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t\t{/if}\n\t\t\t\t<tr slot=\"thead\">\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:focus={header_edit === i || selected_header === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle=\"width: var(--cell-width-{i});\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tedit={header_edit === i}\n\t\t\t\t\t\t\t\t\ton:keydown={end_header_edit}\n\t\t\t\t\t\t\t\t\ton:dblclick={() => edit_header(i)}\n\t\t\t\t\t\t\t\t\t{select_on_focus}\n\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<!-- TODO: fix -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions-->\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction} \"\n\t\t\t\t\t\t\t\t\ton:click={() => handle_sort(i)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\n\t\t\t\t<tr slot=\"tbody\" let:item let:index class:row_odd={index % 2 === 0}>\n\t\t\t\t\t{#each item as { value, id }, j (id)}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\ton:touchstart={() => start_edit(index, j)}\n\t\t\t\t\t\t\ton:click={() => handle_cell_click(index, j)}\n\t\t\t\t\t\t\ton:dblclick={() => start_edit(index, j)}\n\t\t\t\t\t\t\tstyle:width=\"var(--cell-width-{j})\"\n\t\t\t\t\t\t\tstyle={styling?.[index]?.[j] || \"\"}\n\t\t\t\t\t\t\tclass:focus={dequal(selected, [index, j])}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\tbind:value={data[index][j].value}\n\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\tdisplay_value={display_value?.[index]?.[j]}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\tedit={dequal(editing, [index, j])}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\ton:blur={() => ((clear_on_focus = false), parent.focus())}\n\t\t\t\t\t\t\t\t\t{clear_on_focus}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</VirtualTable>\n\t\t</Upload>\n\t</div>\n\t{#if editable}\n\t\t<div class=\"controls-wrap\">\n\t\t\t{#if row_count[1] === \"dynamic\"}\n\t\t\t\t<span class=\"button-wrap\">\n\t\t\t\t\t<BaseButton\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\ton:click={(e) => (e.stopPropagation(), add_row())}\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\td=\"M24.59 16.59L17 24.17V4h-2v20.17l-7.59-7.58L6 18l10 10l10-10l-1.41-1.41z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{i18n(\"dataframe.new_row\")}\n\t\t\t\t\t</BaseButton>\n\t\t\t\t</span>\n\t\t\t{/if}\n\t\t\t{#if col_count[1] === \"dynamic\"}\n\t\t\t\t<span class=\"button-wrap\">\n\t\t\t\t\t<BaseButton\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\ton:click={(e) => (e.stopPropagation(), add_col())}\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\td=\"m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{i18n(\"dataframe.new_column\")}\n\t\t\t\t\t</BaseButton>\n\t\t\t\t</span>\n\t\t\t{/if}\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.button-wrap:hover svg {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.button-wrap svg {\n\t\tmargin-right: var(--size-1);\n\t\tmargin-left: -5px;\n\t}\n\n\t.label p {\n\t\tposition: relative;\n\t\tz-index: var(--layer-4);\n\t\tmargin-bottom: var(--size-2);\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n\n\t.table-wrap {\n\t\tposition: relative;\n\t\ttransition: 150ms;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\toverflow: hidden;\n\t}\n\n\t.table-wrap:focus-within {\n\t\toutline: none;\n\t\tbackground-color: none;\n\t}\n\n\t.dragging {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.no-wrap {\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\ttransition: 150ms;\n\t\twidth: var(--size-full);\n\t\ttable-layout: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t}\n\n\tdiv:not(.no-wrap) td {\n\t\toverflow-wrap: anywhere;\n\t}\n\n\tdiv.no-wrap td {\n\t\toverflow-x: hidden;\n\t}\n\n\ttable.fixed-layout {\n\t\ttable-layout: fixed;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\tbox-shadow: var(--shadow-drop);\n\t}\n\n\ttr {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t}\n\n\ttr > * + * {\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\tth,\n\ttd {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tbox-shadow: inset 0 0 0 1px var(--ring-color);\n\t\tpadding: 0;\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: var(--table-radius);\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: var(--table-radius);\n\t}\n\n\tth.focus,\n\ttd.focus {\n\t\t--ring-color: var(--color-accent);\n\t}\n\n\ttr:last-child td:first-child {\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t}\n\n\ttr:last-child td:last-child {\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\ttr th {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tth svg {\n\t\tfill: currentColor;\n\t\tfont-size: 10px;\n\t}\n\n\t.sort-button {\n\t\tdisplay: flex;\n\t\tflex: none;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 150ms;\n\t\tcursor: pointer;\n\t\tpadding: var(--size-2);\n\t\tcolor: var(--body-text-color-subdued);\n\t\tline-height: var(--text-sm);\n\t}\n\n\t.sort-button:hover {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.des {\n\t\ttransform: scaleY(-1);\n\t}\n\n\t.sort-button.sorted {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.editing {\n\t\tbackground: var(--table-editing);\n\t}\n\n\t.cell-wrap {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toutline: none;\n\t\theight: var(--size-full);\n\t\tmin-height: var(--size-9);\n\t}\n\n\t.controls-wrap {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tpadding-top: var(--size-2);\n\t}\n\n\t.controls-wrap > * + * {\n\t\tmargin-left: var(--size-1);\n\t}\n\n\t.row_odd {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.row_odd.focus {\n\t\tbackground: var(--background-fill-primary);\n\t}\n</style>\n","<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDataFrame } from \"./shared/Table.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport { afterUpdate } from \"svelte\";\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport Table from \"./shared/Table.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { Headers, Data, Metadata, Datatype } from \"./shared/utils\";\n\texport let headers: Headers = [];\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: { data: Data; headers: Headers; metadata: Metadata } = {\n\t\tdata: [[\"\", \"\", \"\"]],\n\t\theaders: [\"1\", \"2\", \"3\"],\n\t\tmetadata: null\n\t};\n\tlet old_value: string = JSON.stringify(value);\n\texport let value_is_output = false;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let label: string | null = null;\n\texport let wrap: boolean;\n\texport let datatype: Datatype | Datatype[];\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let root: string;\n\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t}>;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let height: number | undefined = undefined;\n\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\n\tfunction handle_change(): void {\n\t\tgradio.dispatch(\"change\");\n\t\tif (!value_is_output) {\n\t\t\tgradio.dispatch(\"input\");\n\t\t}\n\t}\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n\t$: {\n\t\tif (JSON.stringify(value) !== old_value) {\n\t\t\told_value = JSON.stringify(value);\n\t\t\thandle_change();\n\t\t}\n\t}\n\tif (\n\t\t(Array.isArray(value) && value?.[0]?.length === 0) ||\n\t\tvalue.data?.[0]?.length === 0\n\t) {\n\t\tvalue = {\n\t\t\tdata: [Array(col_count?.[0] || 3).fill(\"\")],\n\t\t\theaders: Array(col_count?.[0] || 3)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + 1}`),\n\t\t\tmetadata: null\n\t\t};\n\t}\n</script>\n\n<Block\n\t{visible}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\tcontainer={false}\n\t{scale}\n\t{min_width}\n\tallow_overflow={false}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t/>\n\t<Table\n\t\t{root}\n\t\t{label}\n\t\t{row_count}\n\t\t{col_count}\n\t\t{value}\n\t\t{headers}\n\t\ton:change={interactive ? (e) => (value = e.detail) : () => {}}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\t{wrap}\n\t\t{datatype}\n\t\t{latex_delimiters}\n\t\teditable={interactive}\n\t\t{height}\n\t\ti18n={gradio.i18n}\n\t\t{line_breaks}\n\t\t{column_widths}\n\t/>\n</Block>\n"],"names":["createEventDispatcher","insert","set_data","create_if_block_2","tick","create_if_block","append","onMount"],"mappings":"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"}