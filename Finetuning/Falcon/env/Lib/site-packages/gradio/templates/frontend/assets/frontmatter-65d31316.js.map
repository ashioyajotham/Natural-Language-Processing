{"version":3,"file":"frontmatter-65d31316.js","sources":["../../../../js/code/shared/frontmatter.ts"],"sourcesContent":["import type {\n\tElement,\n\tMarkdownExtension,\n\tBlockContext,\n\tLine\n} from \"@lezer/markdown\";\nimport { parseMixed } from \"@lezer/common\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\nimport { foldInside, foldNodeProp, StreamLanguage } from \"@codemirror/language\";\nimport { styleTags, tags } from \"@lezer/highlight\";\n\nconst frontMatterFence = /^---\\s*$/m;\n\nexport const frontmatter: MarkdownExtension = {\n\tdefineNodes: [{ name: \"Frontmatter\", block: true }, \"FrontmatterMark\"],\n\tprops: [\n\t\tstyleTags({\n\t\t\tFrontmatter: [tags.documentMeta, tags.monospace],\n\t\t\tFrontmatterMark: tags.processingInstruction\n\t\t}),\n\t\tfoldNodeProp.add({\n\t\t\tFrontmatter: foldInside,\n\t\t\tFrontmatterMark: () => null\n\t\t})\n\t],\n\twrap: parseMixed((node) => {\n\t\tconst { parser } = StreamLanguage.define(yaml);\n\t\tif (node.type.name === \"Frontmatter\") {\n\t\t\treturn {\n\t\t\t\tparser,\n\t\t\t\toverlay: [{ from: node.from + 4, to: node.to - 4 }]\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}),\n\tparseBlock: [\n\t\t{\n\t\t\tname: \"Frontmatter\",\n\t\t\tbefore: \"HorizontalRule\",\n\t\t\tparse: (cx: BlockContext, line: Line): boolean => {\n\t\t\t\tlet end: number | undefined = undefined;\n\t\t\t\tconst children = new Array<Element>();\n\t\t\t\tif (cx.lineStart === 0 && frontMatterFence.test(line.text)) {\n\t\t\t\t\tchildren.push(cx.elt(\"FrontmatterMark\", 0, 4));\n\t\t\t\t\twhile (cx.nextLine()) {\n\t\t\t\t\t\tif (frontMatterFence.test(line.text)) {\n\t\t\t\t\t\t\tend = cx.lineStart + 4;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (end !== undefined) {\n\t\t\t\t\t\tchildren.push(cx.elt(\"FrontmatterMark\", end - 4, end));\n\t\t\t\t\t\tcx.addElement(cx.elt(\"Frontmatter\", 0, end, children));\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t]\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAWA,MAAM,gBAAmB,GAAA,WAAA,CAAA;AAElB,MAAM,WAAiC,GAAA;AAAA,EAC7C,WAAA,EAAa,CAAC,EAAE,IAAA,EAAM,eAAe,KAAO,EAAA,IAAA,IAAQ,iBAAiB,CAAA;AAAA,EACrE,KAAO,EAAA;AAAA,IACN,SAAU,CAAA;AAAA,MACT,WAAa,EAAA,CAAC,IAAK,CAAA,YAAA,EAAc,KAAK,SAAS,CAAA;AAAA,MAC/C,iBAAiB,IAAK,CAAA,qBAAA;AAAA,KACtB,CAAA;AAAA,IACD,aAAa,GAAI,CAAA;AAAA,MAChB,WAAa,EAAA,UAAA;AAAA,MACb,iBAAiB,MAAM,IAAA;AAAA,KACvB,CAAA;AAAA,GACF;AAAA,EACA,IAAA,EAAM,UAAW,CAAA,CAAC,IAAS,KAAA;AAC1B,IAAA,MAAM,EAAE,MAAA,EAAW,GAAA,cAAA,CAAe,OAAO,IAAI,CAAA,CAAA;AAC7C,IAAI,IAAA,IAAA,CAAK,IAAK,CAAA,IAAA,KAAS,aAAe,EAAA;AACrC,MAAO,OAAA;AAAA,QACN,MAAA;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,IAAM,EAAA,IAAA,CAAK,IAAO,GAAA,CAAA,EAAG,EAAI,EAAA,IAAA,CAAK,EAAK,GAAA,CAAA,EAAG,CAAA;AAAA,OACnD,CAAA;AAAA,KACD;AACA,IAAO,OAAA,IAAA,CAAA;AAAA,GACP,CAAA;AAAA,EACD,UAAY,EAAA;AAAA,IACX;AAAA,MACC,IAAM,EAAA,aAAA;AAAA,MACN,MAAQ,EAAA,gBAAA;AAAA,MACR,KAAA,EAAO,CAAC,EAAA,EAAkB,IAAwB,KAAA;AACjD,QAAA,IAAI,GAA0B,GAAA,KAAA,CAAA,CAAA;AAC9B,QAAM,MAAA,QAAA,GAAW,IAAI,KAAe,EAAA,CAAA;AACpC,QAAA,IAAI,GAAG,SAAc,KAAA,CAAA,IAAK,iBAAiB,IAAK,CAAA,IAAA,CAAK,IAAI,CAAG,EAAA;AAC3D,UAAA,QAAA,CAAS,KAAK,EAAG,CAAA,GAAA,CAAI,iBAAmB,EAAA,CAAA,EAAG,CAAC,CAAC,CAAA,CAAA;AAC7C,UAAO,OAAA,EAAA,CAAG,UAAY,EAAA;AACrB,YAAA,IAAI,gBAAiB,CAAA,IAAA,CAAK,IAAK,CAAA,IAAI,CAAG,EAAA;AACrC,cAAA,GAAA,GAAM,GAAG,SAAY,GAAA,CAAA,CAAA;AACrB,cAAA,MAAA;AAAA,aACD;AAAA,WACD;AACA,UAAA,IAAI,QAAQ,KAAW,CAAA,EAAA;AACtB,YAAA,QAAA,CAAS,KAAK,EAAG,CAAA,GAAA,CAAI,mBAAmB,GAAM,GAAA,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA;AACrD,YAAA,EAAA,CAAG,WAAW,EAAG,CAAA,GAAA,CAAI,eAAe,CAAG,EAAA,GAAA,EAAK,QAAQ,CAAC,CAAA,CAAA;AAAA,WACtD;AACA,UAAO,OAAA,IAAA,CAAA;AAAA,SACR;AACA,QAAO,OAAA,KAAA,CAAA;AAAA,OACR;AAAA,KACD;AAAA,GACD;AACD;;;;"}